<?php
class qqworld_flybox extends qqworld_fw_members {
	public function sign_up() {
		global $qqworld_fw_members;
		$this->name = __('QQWorld Flybox', QQWORLD_FW);
		$this->guid = 'qqworldflybox';
		$this->parent = 'lightbox';
		$this->core = false;
		$qqworld_fw_members[] =  array(
			'name' => $this->name,
			'guid' => $this->guid,
			'parent' => $this->parent,
			'core' => $this->core
		);
	}

	public function init() {
		if ( current_theme_supports('qqworld_fw_' . $this->parent . '_' . $this->guid ) || $this->core ) {
			add_action( 'qqworld-fw-'.$this->parent, array($this, 'add_to_cpanel') );
			add_action( 'admin_init', array($this, 'register') );
			add_action( 'qqworld_fw_runtime_init_js', array($this, 'add_script') );
			add_filter( 'qqworld_fw_resource_js_resources', array($this, 'add_scripts_style') );
			add_filter( 'qqworld_lightbox_selector', array($this, 'selector') );
		}
	}

	public function register() {
		register_setting('qqworld-framework', 'qqworld_fw_qqworld_flybox_settings');
	}

	public function add_script() {
		$settings = get_option('qqworld_fw_qqworld_flybox_settings', get_theme_support('qqworld_fw_' . $this->parent . '_' . $this->guid)[0] );
?>
	$("a[rel^='lightbox']").QQWorldFlybox({
		bg_opacity: <?php echo $settings['bg_opacity']; ?>,
		speed: <?php echo $settings['speed']; ?>,
		pause: <?php echo $settings['pause']; ?>,
		showNav: <?php echo $settings['showNav']; ?>,
		showPager: <?php echo $settings['showPager']; ?>,
		autoHidePager: <?php echo $settings['autoHidePager']; ?>,
		thumbnail: <?php echo $settings['thumbnail']; ?>,
		title: <?php echo $settings['title']; ?>,
		description: <?php echo $settings['description']; ?>,
		link: <?php echo $settings['link']; ?>,
		cpanel: <?php echo $settings['cpanel']; ?>,
		debug: <?php echo $settings['debug']; ?>
	});
<?php
	}

	function selector($selector) {
		return 'lightbox[pic]';
	}

	//add Plugin qqworldFlybox
	function add_scripts_style($resources) {
		$resources[] = 'QQWorld_Flybox';
		return $resources;
	}

	public function add_to_cpanel() {
?>
		<tr valign="top">
			<td>
				<fieldset>
					<legend><span>-</span> <?php echo $this->name; ?></legend>
					<div class="fieldBox">
						<p><?php _ex('qqworldFlybox I developed the first Lightbox plugin based on jQuery. Development of mind because I was the qqworld project v3 uses Ajax technology to read the article, but to find online all the lightbox plugin can not read the content that generated by js, in order to self-sufficiency, self-reliant only. A time when WAiWAi Magazine 075 production.', 'flybox', QQWORLD_FW); ?></p>					
						<h3><?php _e('Screenshot', QQWORLD_FW); ?></h3>
						<p><img src="<?php echo QQWORLD_FW_URL; ?>/lightbox/qqworldflybox/screenshot.png" /></p>
						<h3><?php _e('Settings'); ?></h3>
						<table class="QQWorld_admin_table widefat" cellspacing="0">
							<thead>
								<tr>
									<th scope="col" class="manage-column check-column"></th>
									<th scope="col" class="manage-column"><?php _e('Attribute', QQWORLD_FW);?></th>
									<th scope="col" class="manage-column"><?php _e('Value &amp; Description', QQWORLD_FW);?></th>
								</tr>
							</thead>
							<tfoot>
								<tr>
									<th scope="col" class="manage-column check-column"></th>
									<th scope="col" class="manage-column"><?php _e('Attribute', QQWORLD_FW);?></th>
									<th scope="col" class="manage-column"><?php _e('Value &amp; Description', QQWORLD_FW);?></th>
								</tr>
							</tfoot>

							<tbody>
								<?php
								$values = get_option('qqworld_fw_qqworld_flybox_settings', get_theme_support('qqworld_fw_' . $this->parent . '_' . $this->guid)[0] );
								$fields = array(
									array('heading' => 'bg_opacity',
										'description' => _x('Background color opacity in the range between 0 and 1, including 0 and 1.', 'flybox', QQWORLD_FW),
										'type' => 'textfield',
										'name' => 'qqworld_fw_qqworld_flybox_settings[bg_opacity]',
										'id' => 'bg_opacity',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['bg_opacity']
									),
									array('heading' => 'speed',
										'description' => _x('Animation speed, in milliseconds.', 'flybox', QQWORLD_FW),
										'type' => 'textfield',
										'name' => 'qqworld_fw_qqworld_flybox_settings[speed]',
										'id' => 'speed',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['speed']
									),
									array('heading' => 'pause',
										'description' => _x('Animation time interval, in milliseconds.', 'flybox', QQWORLD_FW),
										'type' => 'textfield',
										'name' => 'qqworld_fw_qqworld_flybox_settings[pause]',
										'id' => 'pause',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['pause']
									),
									array('heading' => 'showNav',
										'description' => _x('Show Navigation (Prev & Next).', 'flybox', QQWORLD_FW),
										'type' => 'switch',
										'name' => 'qqworld_fw_qqworld_flybox_settings[showNav]',
										'id' => 'showNav',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['showNav']
									),
									array('heading' => 'showPager',
										'description' => _x('Show pagination.', 'flybox', QQWORLD_FW),
										'type' => 'switch',
										'name' => 'qqworld_fw_qqworld_flybox_settings[showPager]',
										'id' => 'showPager',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['showPager']
									),
									array('heading' => 'autoHidePager',
										'description' => _x('Auto hide pagination.', 'flybox', QQWORLD_FW),
										'type' => 'switch',
										'name' => 'qqworld_fw_qqworld_flybox_settings[autoHidePager]',
										'id' => 'autoHidePager',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['autoHidePager']
									),
									array('heading' => 'thumbnail',
										'description' => _x('An array can contain a number of functions, each function returns a thumbnail picture may object relative to the path of the event object for jQuery.', 'flybox', QQWORLD_FW),
										'type' => 'textarea',
										'name' => 'qqworld_fw_qqworld_flybox_settings[thumbnail]',
										'id' => 'thumbnail',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['thumbnail'],
										'size' => 'large'
									),
									array('heading' => 'title',
										'description' => _x('An array can contain a number of functions, each function returns a title may object relative to the path of the event object for jQuery.', 'flybox', QQWORLD_FW),
										'type' => 'textarea',
										'name' => 'qqworld_fw_qqworld_flybox_settings[title]',
										'id' => 'title',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['title'],
										'size' => 'large'
									),
									array('heading' => 'description',
										'description' => _x('An array can contain a number of functions, each function returns a description may object relative to the path of the event object for jQuery.', 'flybox', QQWORLD_FW),
										'type' => 'textarea',
										'name' => 'qqworld_fw_qqworld_flybox_settings[description]',
										'id' => 'description',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['description'],
										'size' => 'large'
									),
									array('heading' => 'link',
										'description' => _x('An array can contain a number of functions, each function returns a link href may object relative to the path of the event object for jQuery.', 'flybox', QQWORLD_FW),
										'type' => 'textarea',
										'name' => 'qqworld_fw_qqworld_flybox_settings[link]',
										'id' => 'link',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['link'],
										'size' => 'large'
									),
									array('heading' => 'cpanel',
										'description' => _x('Show control panel.', 'flybox', QQWORLD_FW),
										'type' => 'switch',
										'name' => 'qqworld_fw_qqworld_flybox_settings[cpanel]',
										'id' => 'cpanel',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['cpanel']
									),
									array('heading' => 'debug',
										'description' => _x('Show debug window.', 'flybox', QQWORLD_FW),
										'type' => 'switch',
										'name' => 'qqworld_fw_qqworld_flybox_settings[debug]',
										'id' => 'debug',
										'before' => '<td></td>',
										'field_before' => '<td>',
										'field_after' => '</td>',
										'value' => $values['debug']
									)
								);
								foreach ($fields as $k => $field) {
									echo '<tr>'.qqworld_fw::create_form($field, $values[$k]).'</tr>';
								}
								?>

							</tbody>
						</table>
					</div>
				 </fieldset>
			</td>
		</tr>
<?php
	}
}
new qqworld_flybox;
?>